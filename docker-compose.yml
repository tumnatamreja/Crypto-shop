version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: cryptoshop-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-cryptoshop}
      POSTGRES_USER: ${POSTGRES_USER:-cryptoshop}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-cryptoshop}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cryptoshop-backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${POSTGRES_USER:-cryptoshop}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-cryptoshop}
      JWT_SECRET: ${JWT_SECRET}
      OXAPAY_API_KEY: ${OXAPAY_API_KEY}
      PORT: 3001
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3002}
      BACKEND_URL: ${BACKEND_URL:-http://localhost:3001}
    ports:
      - "3001:3001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: ${BACKEND_URL:-http://localhost:3001}
    container_name: cryptoshop-frontend
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: ${BACKEND_URL:-http://localhost:3001}
    ports:
      - "3002:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: cryptoshop-nginx
    restart: unless-stopped
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_cache:/var/cache/nginx
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  nginx_cache:
    driver: local
